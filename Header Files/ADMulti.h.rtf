{\rtf1\ansi\uc0 \deff1{\fonttbl{\f1\fmodern\fprq1\fcharset0 Courier New;}}{\colortbl;\red255\green255\blue255;\red58\green57\blue53;\red255\green00\blue255;\red255\green00\blue255;\red00\green60\blue255;\red00\green60\blue255;\red255\green00\blue255;\red160\green32\blue240;\red255\green00\blue255;\red60\green59\blue55;\red58\green57\blue53;\red255\green00\blue255;\red165\green42\blue53;\red46\green139\blue87;\red87\green46\blue140;\red58\green57\blue53;}
\paperw11905\paperh16837\margl1134\margr1134\margt1134\margb1134\sectd\plain\f1\fs20
\pard \cbpat1{{\cf2{}}{\cf8{#ifndef ADMULTI}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define ADMULTI}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// ADMulti.h}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// Setup up ADC{0} to convert up to {4} channels using SS{2}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf8{#include <stdint.h>}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf5{// initialize the A/D converter to convert on {1}-{4} channels}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{void}} {\cf2{}}{\cf16{\b ADC_MultiInit\b0 }}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf14{uint{8}_t}} {\cf2{HowMany}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf5{//------------ADC_MultiRead------------}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// Triggers A/D conversion and waits for result}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// Input: none}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// Output: up to {4} {1}{2}-bit result of ADC conversions}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// software trigger, busy-wait sampling, takes about {1}{8}.{6}uS to execute}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// data returned by reference}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// lowest numbered converted channel is in data[{0}]}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf14{void}} {\cf2{}}{\cf16{\b ADC_MultiRead\b0 }}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf14{uint{3}{2}_t}} {\cf2{data}}{\cf11{[}}{\cf2{}}{\cf4{{4}}}{\cf2{}}{\cf11{]);}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#endif}}{\cf2{}}}\par\pard
\cbpat1{}}
